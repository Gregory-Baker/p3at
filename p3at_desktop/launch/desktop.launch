<?xml version="1.0"?>
<launch>
  <arg name="joy" default="true" doc="spawn joystick teleop controller"/>
  <arg name="mapping" default="cartographer" doc="spawn cartographer mapping"/>
  <arg name="move_base" default="false" doc="spawn move_base"/>
  <arg name="unity" default="true" doc="spawn ros_tcp_endpoint for Unity link"/>
  <arg name="rviz" default="true" doc="spawn rviz"/>
  <arg name="rviz_config" default="map" unless="$(eval mapping == 'none')"/>
  <arg name="rviz_config" value="scan" if="$(eval mapping == 'none')"/>
  <arg name="gripper" default="true" doc="spawn p3at gripper joystick node"/>
  <arg name="record" default="false" doc="rosbag record topics"/>
  <arg name="id" doc="integer value"/>
  <arg name="camera" doc="zed or theta"/>
  <arg name="task" doc="M=map, B=barrel placement"/>

  <group if="$(arg joy)">
    <include file="$(find p3at_control)/launch/teleop.launch"/>

    <group if="$(arg gripper)">
      <node pkg="p3at_gripper" type="p3at_gripper_joy.py" name="p3at_gripper_joy">
        <remap from="joy" to="/joy_teleop/joy"/>
      </node>
    </group>
  </group>

  <group if="$(eval mapping == 'cartographer')">
    <include file="$(find p3at_navigation)/launch/cartographer.launch">
      <arg name="move_base" value="$(arg move_base)"/>
    </include>
  </group>

  <group if="$(eval mapping == 'slam_toolbox')">
    <include file="$(find slam_toolbox)/launch/online_async.launch"/>
  </group>

  <group if="$(arg unity)">
    <include file="$(find ros_tcp_endpoint)/launch/endpoint.launch"/>  
  </group>

  <group if="$(arg rviz)">
    <include file="$(find p3at_viz)/launch/view_robot.launch">
      <arg name="config" value="$(arg rviz_config)"/>
    </include>
  </group>

  <group if="$(arg record)">
    <node pkg="rosbag" type="record" name="rosbag_record_node"
        args="record 
        -o $(env HOME)/Experiment_Data/$(arg id)/$(arg camera)/$(arg task) 
        /rosout /tf /odometry/filtered /map /scan /cmd_vel /usb_cam/image_raw/compressed /head_rot /joy_teleop/joy"/>   
  </group>
</launch>
